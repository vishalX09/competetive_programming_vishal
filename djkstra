void djkstra(int source, vector<int> adj[] , vector<int> &dis){
	priority_queue<pair<int , int> , vector<pair<int , int >> , greater<pair<int , int>>> pq;
	vector<int> dis(n , 0);
	for(int i =0i<n;++i){
		dis[i] = 1e9;
	}
	dis[source] = 0;
	pq.push({0 ,source});

	while(!pq.empty()){
		int node = pq.top().first;
		int dist = pq.top().second;
		dq.pop();

		for(auto it:adj[node]){
			int adjnode = it.first;
			int wt = it.second;
			if(dist + wt < dis[adjnode]){
				dist[adjnode] = wt + dist;
				pq.push({wt+dist , adjnode});
			}
		}
	}

	for(int i =0;i<n;++i){
		cout<<dis[i]<<" ";
	}

}
