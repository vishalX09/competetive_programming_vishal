#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
 
const int n = 1000000;
bool sieve[1000001];
void createsieve(){
	for(int i = 2;i<=n;++i){
		sieve[i] = true;
	}
	for(int i = 2;i*i<=n;++i){
		if(sieve[i] == true){
			for(int j = i*i;j<=n;j+=i){
				sieve[j] = false;
			}
		}
	}
}
 
vector<int> genrateprimes(int n){
	vector<int> ds;
	for(int i =2;i<=n;++i){
		if(sieve[i] == true){
			ds.push_back(i);
 
		}
	}
	return ds;
}
 
signed main(){
	IOS;
	createsieve();
	int t;
	cin>>t;
	while(t--){
		int l,r;
		cin>>l>>r;
		if(l<2) l = 2;
 
		vector<int> primes = genrateprimes(sqrt(r));
 
		int x = r-l+1;
		int dummy[x];
		for(int i =0;i<x;++i){
			dummy[i] = 1;
 
		}
 
 
		for(auto pr:primes){
			int firstmultiple = (l/pr)*pr;
			if(firstmultiple< l ) firstmultiple += pr;
 
			for(int j = max(pr*pr , firstmultiple); j<=r;j+=pr){
				dummy[j-l] = 0;
			}
		}
 
 
		for(int i = l;i<=r;++i){
			if(dummy[i-l] ==1){
				cout<<i<<endl;
			}
		}
		cout<<endl;
 
	}
} 
